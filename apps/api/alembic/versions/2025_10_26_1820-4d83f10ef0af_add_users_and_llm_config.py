"""add_users_and_llm_config

Revision ID: 4d83f10ef0af
Revises: add_chat_documents
Create Date: 2025-10-26 18:20:00.339901

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4d83f10ef0af'
down_revision: Union[str, None] = 'add_chat_documents'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Create users table
    op.create_table('users',
        sa.Column('id', sa.dialects.postgresql.UUID(), nullable=False),
        sa.Column('name', sa.String(), nullable=True),
        sa.Column('email', sa.String(), nullable=True),
        sa.Column('preferences', sa.dialects.postgresql.JSONB(), nullable=True),
        sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email')
    )
    
    # Add columns to chats table
    op.add_column('chats', sa.Column('user_id', sa.dialects.postgresql.UUID(), nullable=True))
    op.add_column('chats', sa.Column('llm_provider', sa.String(), server_default='openai', nullable=False))
    op.add_column('chats', sa.Column('llm_model', sa.String(), server_default='gpt-4-turbo-preview', nullable=False))
    op.add_column('chats', sa.Column('llm_temperature', sa.Float(), server_default='0.7', nullable=False))
    op.create_foreign_key('chats_user_id_fkey', 'chats', 'users', ['user_id'], ['id'], ondelete='SET NULL')
    
    # Drop problematic indexes (not needed since they already exist correctly)
    # The autogenerated code was trying to recreate indexes that don't need changes


def downgrade() -> None:
    # Remove foreign key and columns from chats
    op.drop_constraint('chats_user_id_fkey', 'chats', type_='foreignkey')
    op.drop_column('chats', 'llm_temperature')
    op.drop_column('chats', 'llm_model')
    op.drop_column('chats', 'llm_provider')
    op.drop_column('chats', 'user_id')
    
    # Drop users table
    op.drop_table('users')

